<%= javascript_include_tag "application", nonce: true %>
<% end %>
<%= javascript_include_tag "timed_trigger", nonce: true %>
<% end %>
<%= javascript_include_tag "filesaver", nonce: true %>
<% end %>
<%= javascript_include_tag "jszip", nonce: true %>
<% end %>
<%= javascript_tag nonce: true do -%>
  (function(doc) {
    // console.log('Script iniziato...');
    let observer;  
    let lastTicketUrl = '';  

    const waitForTargetNode = function(callback) {
      // console.log('In attesa che il nodo #app sia visibile...');
      const interval = setInterval(function() {
        const targetNode = doc.querySelector('#app');
        if (targetNode) {
          // console.log('Nodo #app trovato:', targetNode);
          clearInterval(interval);
          callback(targetNode);
        }
      }, 500);
    };

    const observeDOM = function(targetNode, callback) {
      // console.log('Attivazione MutationObserver...');
      try {
        observer = new MutationObserver(callback);
        observer.observe(targetNode, { childList: true, subtree: true });
        // console.log('MutationObserver attivo...');
      } catch (e) {
        // console.error('Errore in MutationObserver:', e);
      }
    };

    const transformPhoneNumbers = function() {
      // console.log('Esecuzione transformPhoneNumbers...');
      try {
         
        if (observer) {
          observer.disconnect();
          // console.log('MutationObserver disattivato temporaneamente.');
        }

         
        const currentUrl = window.location.href;
        if (!currentUrl.includes('#ticket/zoom/')) {
          // console.log('Non siamo nella pagina di un ticket.');
          return;
        }

         
        if (currentUrl === lastTicketUrl) {
          // console.log('Il ticket non è cambiato, nessuna azione necessaria.');
          return;
        }

         
        lastTicketUrl = currentUrl;
        // console.log('Nuovo ticket rilevato:', lastTicketUrl);

        const richTextElements = doc.querySelectorAll('.richtext-content');
        // console.log('Elementi trovati:', richTextElements.length);

        richTextElements.forEach(function(element, index) {
          // console.log('Elaborazione elemento #' + (index + 1), element);

          let content = element.innerHTML;
          // console.log('Contenuto:', content);

           
          const phoneRegex = /\+\d{1,3}\s?\d{6,}/g;
          const matches = content.match(phoneRegex);
          // console.log('Numeri trovati:', matches);

          if (matches) {
            matches.forEach(function(match) {
              const cleanNumber = match.replace(/\+/g, '');
              // console.log('Numero pulito:', cleanNumber);

               
              if (content.includes('href="https://wa.me/send?phone=' + cleanNumber)) {
                // console.log('Numero già trasformato:', match);
                return;
              }

              const anchor = doc.createElement('a');
              anchor.setAttribute('class', 'whBTN');
              anchor.setAttribute('href', 'https://wa.me/send?phone=' + cleanNumber);
              anchor.textContent = match;

              content = content.replace(match, anchor.outerHTML);
            });
            element.innerHTML = content;
            // console.log('Elemento aggiornato:', element);
          } else {
            // console.log('Nessun numero trovato in questo elemento.');
          }
        });

         
        if (observer) {
          observer.observe(doc.querySelector('#app'), { childList: true, subtree: true });
          // console.log('MutationObserver riattivato.');
        }
      } catch (e) {
        // console.error('Errore in transformPhoneNumbers:', e);
      }
    };

    // console.log('Avvio attesa nodo #app...');
    waitForTargetNode(function(targetNode) {
      // console.log('Nodo #app pronto, avvio script...');
      observeDOM(targetNode, function() {
        // console.log('Callback MutationObserver chiamata.');
        transformPhoneNumbers();
      });

      // console.log('Esecuzione immediata transformPhoneNumbers...');
      transformPhoneNumbers();
    });

    // console.log('Script completato.');
  })(document);
<% end -%>
